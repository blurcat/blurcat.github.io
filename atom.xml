<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>bluecat&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://m2learn.com/"/>
  <updated>2018-03-14T04:56:45.080Z</updated>
  <id>http://m2learn.com/</id>
  
  <author>
    <name>bluecat</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用hexo + GitHub pages搭建自己的blog</title>
    <link href="http://m2learn.com/2018/03/14/hexo4/"/>
    <id>http://m2learn.com/2018/03/14/hexo4/</id>
    <published>2018-03-14T04:56:44.886Z</published>
    <updated>2018-03-14T04:56:45.080Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-注册GitHub账号并新建库"><a href="#1-注册GitHub账号并新建库" class="headerlink" title="1.注册GitHub账号并新建库"></a>1.注册GitHub账号并新建库</h3><ul><li><p>如果还没有GitHub账号的话，先到<a href="https://github.com" target="_blank" rel="noopener">GitHub官网</a>注册一个。<br><img src="https://upload-images.jianshu.io/upload_images/11003935-bc64cbf272724ee9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></li><li><p>登录之后创建一个新的库<br><img src="https://upload-images.jianshu.io/upload_images/11003935-5f57fdaca515edb0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></li><li><p>注意库名要设置成你的<code>GitHub名.github.io</code>不然解析的时候可能有问题<br><img src="https://upload-images.jianshu.io/upload_images/11003935-4abcf0726a5087a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></li><li><p>在setting里设置一下域名和GitHub pages<br><img src="https://upload-images.jianshu.io/upload_images/11003935-0e2aedc3f396a9cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></li><li><p>解析域名到<code>yourname.github.io</code>,我的域名是在阿里买的<br><img src="https://upload-images.jianshu.io/upload_images/11003935-9f3ada302eaf0c8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></li></ul><h3 id="2-安装git"><a href="#2-安装git" class="headerlink" title="2.安装git"></a>2.安装git</h3><ul><li><p>可到<a href="https://git-scm.com/" target="_blank" rel="noopener">git官网</a>下载安装包<br><img src="https://upload-images.jianshu.io/upload_images/11003935-69daa8d61de36a47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></li><li><p>安装完成之后打开cmd，输入<code>git --version</code>,能显示git版本信息的话就说明git安装成功了。如果没显示，可能是没有设置环境变量。<br><img src="https://upload-images.jianshu.io/upload_images/11003935-f2bdf643ee807e8b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="https://upload-images.jianshu.io/upload_images/11003935-19151885270746de.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></li></ul><p>具体的安装步骤就不详细列出了，去百度一下Windows上安装git，会有一堆安装步骤教程。</p><ul><li>ssh配置</li></ul><p>打开git bash终端，输入下面两条命令设置user.name和user.email。<br><code>git config --global user.name &quot;你的GitHub用户名&quot;</code><br><code>git config --global user.email &quot;你的GitHub注册邮箱&quot;</code></p><ul><li>生成ssh密匙</li></ul><p>还是在git bash 终端输入命令。<br><code>ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</code><br>在提示设置密码的时候直接按回车键就可以。因为那是要设置你的<em>秘钥密码</em>，设置了之后，每次使用秘钥的时候都要输入密码。我使用的是自己的电脑平时只有自己用，所以没设置<em>秘钥密码</em>，如果你使用的是公共电脑，你可以设置<em>秘钥密码</em>保证秘钥安全。</p><ul><li>将公匙添加到github上</li></ul><p>此时，在用户文件夹下的.ssh文件夹里会出现刚刚创建的ssh密钥文件id_rsa和公钥文件id_rsa.pub。</p><ul><li>用户头像→Settings→SSH and GPG keys→New SSH key→将id_rsa.pub中的内容复制到Key文本框中，然后点击Add SSH key(添加SSH)按钮。<br><img src="https://upload-images.jianshu.io/upload_images/11003935-b2eff9e95a770da1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/11003935-75680f8db7ada7c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><img src="https://upload-images.jianshu.io/upload_images/11003935-8bafe49c4bd74e17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><ul><li>验证</li></ul><h3 id="3-安装node-js"><a href="#3-安装node-js" class="headerlink" title="3.安装node.js"></a>3.安装node.js</h3><ul><li>安装前提<br>到<a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js官网</a>下载安装包<br><img src="https://upload-images.jianshu.io/upload_images/11003935-e346e2ce9aeb7299.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li></ul><p>windows安装一直点“下一步”，直至安装完成即可。在安装目录下新建两个文件夹。<code>node_cache</code>和<code>node_global</code><br><img src="https://upload-images.jianshu.io/upload_images/11003935-e73aef188bb7a3d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>然后设置环境变量，在<strong>用户变量</strong>新建一个<code>PATH</code>变量名并且输入变量值(node.js安装目录)<br><img src="https://upload-images.jianshu.io/upload_images/11003935-c5ca6697354e523b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>在<strong>系统变量</strong>里添加hexo/bin路径<br><img src="https://upload-images.jianshu.io/upload_images/11003935-c926efd6bbbf6436.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>打开cmd，输入<code>node --version</code>查看是否显示node版本号，若显示则安装没问题。<br><img src="https://upload-images.jianshu.io/upload_images/11003935-f66bcce416d61403.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>至此，node.js安装完成。</p><h3 id="4-安装hexo"><a href="#4-安装hexo" class="headerlink" title="4.安装hexo"></a>4.安装hexo</h3><h3 id="5-发布到GitHub仓库"><a href="#5-发布到GitHub仓库" class="headerlink" title="5.发布到GitHub仓库"></a>5.发布到GitHub仓库</h3><h3 id="6-主题配置"><a href="#6-主题配置" class="headerlink" title="6.主题配置"></a>6.主题配置</h3><h3 id="7-添加评论系统"><a href="#7-添加评论系统" class="headerlink" title="7.添加评论系统"></a>7.添加评论系统</h3><blockquote><ul><li>这个博客就是这样搭建起来的，还没有时间整理更新，后续会继续更新的，现在先列一个框架出来。</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-注册GitHub账号并新建库&quot;&gt;&lt;a href=&quot;#1-注册GitHub账号并新建库&quot; class=&quot;headerlink&quot; title=&quot;1.注册GitHub账号并新建库&quot;&gt;&lt;/a&gt;1.注册GitHub账号并新建库&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如果还没有
      
    
    </summary>
    
      <category term="技术" scheme="http://m2learn.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="搭建blog" scheme="http://m2learn.com/tags/%E6%90%AD%E5%BB%BAblog/"/>
    
  </entry>
  
  <entry>
    <title>centos7.x搭建git服务器</title>
    <link href="http://m2learn.com/2018/03/13/centos7.x%E6%90%AD%E5%BB%BAgit%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
    <id>http://m2learn.com/2018/03/13/centos7.x搭建git服务器搭建/</id>
    <published>2018-03-13T05:14:17.565Z</published>
    <updated>2018-03-13T05:14:17.822Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Git-是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。"><a href="#Git-是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。" class="headerlink" title="Git 是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。"></a>Git 是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</h4><h5 id="1-安装依赖库和编译工具"><a href="#1-安装依赖库和编译工具" class="headerlink" title="1.安装依赖库和编译工具"></a>1.安装依赖库和编译工具</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</span><br></pre></td></tr></table></figure><h4 id="2-安装编译工具"><a href="#2-安装编译工具" class="headerlink" title="2.安装编译工具"></a>2.安装编译工具</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc perl-ExtUtils-MakeMaker</span><br></pre></td></tr></table></figure><h4 id="3-下载git并安装"><a href="#3-下载git并安装" class="headerlink" title="3.下载git并安装"></a>3.下载git并安装</h4><p>选一个目录，用来放下载下来的安装包，这里将安装包放在 /usr/local/src 目录里,到官网找一个新版稳定的源码包。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src</span><br><span class="line">wget https://www.kernel.org/pub/software/scm/git/git-2.10.0.tar.gz</span><br><span class="line">tar -zvxf git-2.10.0.tar.gz    #解压</span><br><span class="line">cd git-2.10.0               </span><br><span class="line">make all prefix=/usr/local/git        #执行编译</span><br><span class="line">make install prefix=/usr/local/git   #编译完成后, 安装到 /usr/local/git 目录下</span><br></pre></td></tr></table></figure></p><h4 id="4-配置环境变量"><a href="#4-配置环境变量" class="headerlink" title="4.配置环境变量"></a>4.配置环境变量</h4><p>将git目录加入PATH<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;export PATH=$PATH:/usr/local/git/bin&apos; &gt;&gt; /etc/bashrc     #将原来的 PATH 指向目录修改为现在的目录</span><br><span class="line">source /etc/bashrc      #生效环境变量</span><br><span class="line">git --version           #查看到版本号说明安装成功</span><br></pre></td></tr></table></figure></p><h4 id="5-创建-git-账号密码"><a href="#5-创建-git-账号密码" class="headerlink" title="5.创建 git 账号密码"></a>5.创建 git 账号密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd -m gituser</span><br><span class="line">passwd gituser    #控制台输入创建密码后，输入您自定义的密码，并二次确认。</span><br></pre></td></tr></table></figure><h4 id="6-初始化-git-仓库并配置用户权限"><a href="#6-初始化-git-仓库并配置用户权限" class="headerlink" title="6.初始化 git 仓库并配置用户权限"></a>6.初始化 git 仓库并配置用户权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/repositories    #创建 /data/repositories 目录用于存放 git 仓库</span><br><span class="line">cd /data/repositories/ &amp;&amp; git init --bare test.git    #创建好后，初始化这个仓库</span><br></pre></td></tr></table></figure><p>给 git 仓库目录设置用户和用户组并设置权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -R gituser:gituser /data/repositories</span><br><span class="line">chmod 755 /data/repositories</span><br></pre></td></tr></table></figure><p>查找 git-shell 所在目录 , 编辑 /etc/passwd 文件，将最后一行关于 gituser 的登录 shell 配置改为 git-shell 的目录，出于安全考虑, 限制 git 账号的 ssh 连接只能是登录 git-shell。</p><blockquote><ul><li>把gituser:x:1000:1000::/home/gituser:/bin/bash改成gituser:x:1000:1000::/home/gituser:/usr/local/git/bin/git-shell</li></ul></blockquote><h4 id="7-测试搭建好的Git服务"><a href="#7-测试搭建好的Git服务" class="headerlink" title="7.测试搭建好的Git服务"></a>7.测试搭建好的Git服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone gituser@服务器ip:/data/repositories/test.git</span><br></pre></td></tr></table></figure><hr><p>由于cmd markdown 需要升级会员才能上传本地图片，所以我的一些截图没法上传，看不明白的可以留言讨论。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Git-是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。&quot;&gt;&lt;a href=&quot;#Git-是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。&quot; class=&quot;headerlink&quot; title=&quot;Git 是一款免
      
    
    </summary>
    
      <category term="linux" scheme="http://m2learn.com/categories/linux/"/>
    
    
      <category term="git服务器搭建" scheme="http://m2learn.com/tags/git%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>centos 7.4  安装nginx-1.10.3</title>
    <link href="http://m2learn.com/2018/03/06/centos%207.4%20%20%E5%AE%89%E8%A3%85nginx-1.10.3/"/>
    <id>http://m2learn.com/2018/03/06/centos 7.4  安装nginx-1.10.3/</id>
    <published>2018-03-06T05:16:30.650Z</published>
    <updated>2018-03-06T05:48:14.631Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-安装前装备"><a href="#1-安装前装备" class="headerlink" title="1.安装前装备"></a>1.安装前装备</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc-c++  </span><br><span class="line">yum install pcre pcre-devel  </span><br><span class="line">yum install zlib zlib-devel  </span><br><span class="line">yum install openssl openssl--devel</span><br></pre></td></tr></table></figure><h4 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/local/nginx     </span><br><span class="line">#创建一个安装目录</span><br><span class="line">cd /usr/local/nginx    </span><br><span class="line">#切换到创建好的目录</span><br><span class="line">wget http://nginx.org/download/nginx-1.10.3.tar.gz   </span><br><span class="line">#下载安装包</span><br><span class="line">tar -zxvf nginx-1.10.3.tar.gz         </span><br><span class="line">#解压</span><br><span class="line">cd nginx-1.10.3                      </span><br><span class="line">#到解压目录下编译</span><br><span class="line">./configure --prefix=/usr/local/nginx --with-pcre --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module --with-http_realip_module    </span><br><span class="line">#编译</span><br><span class="line">make &amp;&amp; make install         </span><br><span class="line">#安装</span><br></pre></td></tr></table></figure><blockquote><ul><li>在编译的时候可能遇到以下报错：</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/configure: error: the HTTP rewrite module requires the PCRE library.You can either disable the module by using --without-http_rewrite_module option, or install the PCRE library into the system, or build the PCRE library statically from the source with nginx by using --with-pcre=&lt;path&gt; option.         </span><br><span class="line">#没有安装pcre-devel</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure: error: SSL modules require the OpenSSL library. You can either do not enable the modules, or install the OpenSSL library into the system, or build the OpenSSL library statically from the source with nginx by using --with-openssl=&lt;path&gt; option     </span><br><span class="line">#没有安装openssl-devel</span><br></pre></td></tr></table></figure><blockquote><ul><li>针对上诉的报错情况，执行下面的安装命令，然后就可以正常编译<br>yum -y install pcre-devel openssl openssl-devel</li></ul></blockquote><h4 id="3-把Nginx添加成系统服务"><a href="#3-把Nginx添加成系统服务" class="headerlink" title="3.把Nginx添加成系统服务"></a>3.把Nginx添加成系统服务</h4><p>vim /etc/init.d/nginx<br>在/etc/init.d下创建一个nginx文件，并输入以下代码:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>! /bin/bash</span><br><span class="line"><span class="meta">#</span> chkconfig: - 85 15</span><br><span class="line">PATH=/usr/local/nginx          #Nginx的安装路径</span><br><span class="line">DESC="nginx daemon"</span><br><span class="line">NAME=nginx</span><br><span class="line">DAEMON=$PATH/sbin/$NAME</span><br><span class="line">CONFIGFILE=$PATH/conf/$NAME.conf</span><br><span class="line">PIDFILE=$PATH/logs/$NAME.pid</span><br><span class="line">SCRIPTNAME=/etc/init.d/$NAME</span><br><span class="line">set -e</span><br><span class="line">[ -x "$DAEMON" ] || exit 0</span><br><span class="line">do_start() &#123;</span><br><span class="line"><span class="meta">$</span>DAEMON -c $CONFIGFILE || echo -n "nginx already running"</span><br><span class="line">&#125;</span><br><span class="line">do_stop() &#123;</span><br><span class="line"><span class="meta">$</span>DAEMON -s stop || echo -n "nginx not running"</span><br><span class="line">&#125;</span><br><span class="line">do_reload() &#123;</span><br><span class="line"><span class="meta">$</span>DAEMON -s reload || echo -n "nginx can't reload"</span><br><span class="line">&#125;</span><br><span class="line">case "$1" in</span><br><span class="line">start)</span><br><span class="line">echo -n "Starting $DESC: $NAME"</span><br><span class="line">do_start</span><br><span class="line">echo "."</span><br><span class="line">;;</span><br><span class="line">stop)</span><br><span class="line">echo -n "Stopping $DESC: $NAME"</span><br><span class="line">do_stop</span><br><span class="line">echo "."</span><br><span class="line">;;</span><br><span class="line">reload|graceful)</span><br><span class="line">echo -n "Reloading $DESC configuration..."</span><br><span class="line">do_reload</span><br><span class="line">echo "."</span><br><span class="line">;;</span><br><span class="line">restart)</span><br><span class="line">echo -n "Restarting $DESC: $NAME"</span><br><span class="line">do_stop</span><br><span class="line">do_start</span><br><span class="line">echo "."</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo "Usage: $SCRIPTNAME &#123;start|stop|reload|restart&#125;" &gt;&amp;2</span><br><span class="line">exit 3</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><blockquote><ul><li>然后执行下面命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x /etc/init.d/nginx       #给执行权限</span><br><span class="line">chkconfig --add nginx             #注册成服务 </span><br><span class="line">chkconfig nginx on                #设置开机启动</span><br></pre></td></tr></table></figure></li></ul></blockquote><blockquote><ul><li>添加成系统服务之后可以使用以下命令控制Nginx服务</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx.service        #启动nginx服务</span><br><span class="line">systemctl stop nginx.service         #停止nginx服务</span><br><span class="line">systemctl restart nginx.service      #重启nginx服务</span><br><span class="line">systemctl reload nginx.service       #重新读取nginx配置(这个最常用, 不用停止nginx服务就能使修改的配置生效)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-安装前装备&quot;&gt;&lt;a href=&quot;#1-安装前装备&quot; class=&quot;headerlink&quot; title=&quot;1.安装前装备&quot;&gt;&lt;/a&gt;1.安装前装备&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
      <category term="linux" scheme="http://m2learn.com/categories/linux/"/>
    
    
      <category term="nginx" scheme="http://m2learn.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://m2learn.com/2018/03/03/hello-world/"/>
    <id>http://m2learn.com/2018/03/03/hello-world/</id>
    <published>2018-03-03T07:25:05.544Z</published>
    <updated>2018-03-03T07:25:05.544Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
