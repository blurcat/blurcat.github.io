<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[使用hexo搭建自己的blog]]></title>
    <url>%2F2018%2F03%2F06%2F%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84blog%2F</url>
    <content type="text"><![CDATA[1.创建GitHub账号2.安装git3.安装hexo4.本地配置测试5.发布到GitHub仓库6.主题配置7.添加评论系统 这个博客就是这样搭建起来的，还没有时间整理更新，后续会继续更新的，现在先列一个框架出来。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>搭建blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos 7.4 安装nginx-1.10.3]]></title>
    <url>%2F2018%2F03%2F06%2Fcentos%207.4%20%20%E5%AE%89%E8%A3%85nginx-1.10.3%2F</url>
    <content type="text"><![CDATA[1.安装前装备1234yum install gcc-c++ yum install pcre pcre-devel yum install zlib zlib-devel yum install openssl openssl--devel 2.安装1234567891011121314mkdir -p /usr/local/nginx #创建一个安装目录cd /usr/local/nginx #切换到创建好的目录wget http://nginx.org/download/nginx-1.10.3.tar.gz #下载安装包tar -zxvf nginx-1.10.3.tar.gz #解压cd nginx-1.10.3 #到解压目录下编译./configure --prefix=/usr/local/nginx --with-pcre --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module --with-http_realip_module #编译make &amp;&amp; make install #安装 在编译的时候可能遇到以下报错： 12/configure: error: the HTTP rewrite module requires the PCRE library.You can either disable the module by using --without-http_rewrite_module option, or install the PCRE library into the system, or build the PCRE library statically from the source with nginx by using --with-pcre=&lt;path&gt; option. #没有安装pcre-devel 12./configure: error: SSL modules require the OpenSSL library. You can either do not enable the modules, or install the OpenSSL library into the system, or build the OpenSSL library statically from the source with nginx by using --with-openssl=&lt;path&gt; option #没有安装openssl-devel 针对上诉的报错情况，执行下面的安装命令，然后就可以正常编译yum -y install pcre-devel openssl openssl-devel 3.把Nginx添加成系统服务vim /etc/init.d/nginx在/etc/init.d下创建一个nginx文件，并输入以下代码: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748#! /bin/bash# chkconfig: - 85 15PATH=/usr/local/nginx #Nginx的安装路径DESC="nginx daemon"NAME=nginxDAEMON=$PATH/sbin/$NAMECONFIGFILE=$PATH/conf/$NAME.confPIDFILE=$PATH/logs/$NAME.pidSCRIPTNAME=/etc/init.d/$NAMEset -e[ -x "$DAEMON" ] || exit 0do_start() &#123;$DAEMON -c $CONFIGFILE || echo -n "nginx already running"&#125;do_stop() &#123;$DAEMON -s stop || echo -n "nginx not running"&#125;do_reload() &#123;$DAEMON -s reload || echo -n "nginx can't reload"&#125;case "$1" instart)echo -n "Starting $DESC: $NAME"do_startecho ".";;stop)echo -n "Stopping $DESC: $NAME"do_stopecho ".";;reload|graceful)echo -n "Reloading $DESC configuration..."do_reloadecho ".";;restart)echo -n "Restarting $DESC: $NAME"do_stopdo_startecho ".";;*)echo "Usage: $SCRIPTNAME &#123;start|stop|reload|restart&#125;" &gt;&amp;2exit 3;;esacexit 0 然后执行下面命令123chmod a+x /etc/init.d/nginx #给执行权限chkconfig --add nginx #注册成服务 chkconfig nginx on #设置开机启动 添加成系统服务之后可以使用以下命令控制Nginx服务 1234systemctl start nginx.service #启动nginx服务systemctl stop nginx.service #停止nginx服务systemctl restart nginx.service #重启nginx服务systemctl reload nginx.service #重新读取nginx配置(这个最常用, 不用停止nginx服务就能使修改的配置生效)]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F03%2F03%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
